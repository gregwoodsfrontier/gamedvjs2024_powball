import { mWorld } from "./mWorld";

export const queries = {
    // planckBody: mWorld.with("planck"),
    spriteConfigs: mWorld.with("position", "spriteKey"),
    sprites: mWorld.with("spriteObject"),
    pPolygonConfigs: mWorld.with("points", "isClosedPath").without("position"),
    pPolygons: mWorld.with("polygonObject"),
    ballBodyConfigs: mWorld.with("ballConfig", "position", "size"),
    ballBodies: mWorld.with("ball", "ballBody"),
    wallBodyConfigs: mWorld.with("points", "bouncy", "isClosedPath").without("position"),
    wallBodies: mWorld.with("wall", "chainBody"),
    rectConfigs: mWorld.with("rectConfig", "position"),
    rectBodyConfigs: mWorld.with("rectBodyTag", "rectConfig", "position"),
    rects: mWorld.with("rectObject"),
    rectBodies: mWorld.with("rectBody", "rectObject"),
    revJointConfigs: mWorld.with("revJointConfig", "motorSpeed", "rectBody"),
    revJoints: mWorld.with("revJoint", "motorSpeed"),
    balls: mWorld.with("ball", "spriteObject", "ballBody", "position"),
    walls: mWorld.with("wall", "chainBody", "polygonObject"),
    flippers: mWorld.with("flipperSide", "rectBody", "revJoint", "motorSpeed"),
    // void: mWorld.with("voidZone", "wall"),
    // flippers: mWorld.with("flipperConfig", "planck", "position"),
    // flipperShape: mWorld.with("flipperConfig", "planck", "position", "renderShape"),
    // isFlippable: mWorld.with("motorSpeed", "flipperJoint"),
    // leftFlip: mWorld.with("flipperConfig").where(({flipperConfig}) => flipperConfig.side === "left"),
    // rightFlip: mWorld.with("flipperConfig").where(({flipperConfig}) => flipperConfig.side === "right"),
    contactData: mWorld.with("contactPoint", "contactEntityA", "contactEntityB", "contactType"),
    particles: mWorld.with("ballRank", "emitters"),
    explosionBox: mWorld.with("explosionBox", "contactPoint"),
    controllableByKeyDown: mWorld.with("keyBoardKey", "onKeyDown"),
    controllableByKeyJustDown: mWorld.with("keyBoardKey", "onKeyJustDown"),
    controllableByKeyUp: mWorld.with("keyBoardKey", "onKeyUp"),
    audio: mWorld.with("audioKey"),
    shrinkables: mWorld.with("shrink", "ball", "size", "sprite", "ballRank"),
    marker: mWorld.with("position", "spriteObject", "marker"),
    movableSprites: mWorld.with("movable", "spriteObject", "position", "angle")
}